#!/usr/bin/expect

# timeout around 15 minutes / 1000.000 msec
set timeout 1000000
set command [lindex $argv 0]
set binary [lindex $argv 1]
set address [lindex $argv 2]
set bindir [lindex $argv 3]


# The binary to flash
if { $command == "" || $binary == "" }  {
	puts "Usage: <command> <binary> to send>\n"
	exit 1
}

# Optional parameter address, set to 0 if absent
# If you only flash the application (and didn't combine with the softdevice) you need to place it after the softdevice
if { $address == "" } {
	set address 0
}

spawn telnet 127.0.0.1 4444

# Expect the thing to be a debugger
expect "Open On-Chip Debugger"

# Stop before flashing image
send "halt\r"

# Expect last line of halting command to be about xPSR or just ">" if target was already halted before
# Show current banks
expect {
	"xPSR" { send "flash banks\r" }
	-re ">" { send "flash banks\r" }
}

expect -re ">"

if { $command == "all" } {
	send "echo We will do a mass-erase\r"

	expect -re ">"
	
	# Mass erase
	send "nrf51 mass_erase\r"
	# maybe wait a bit?, first wait?
	expect -re ">"
}

send "flash write_image erase $binary $address\r"

# Expect this to be written
expect "wrote"
send "reset\r"

# Hand over the rest to the user
# interact

expect -re ">"

# you can also send
send "exit\r"
